<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jeu du Taquin</title>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <style>
        #puzzleContainer {
            display: grid;
            grid-template-columns: repeat(3, 160px);
            grid-template-rows: repeat(3, 160px);
            gap: 2px;
        }
        .piece {
            width: 160px;
            height: 160px;
            border: 1px solid #333;
            box-sizing: border-box;
            background-size: cover;
            cursor: pointer;
        }
        .empty {
            background-color: lightgray;
        }
        .message {
            font-size: 1.5em;
        }
        #shuffleButton {
        /* margin-bottom : 20px ; */
        margin : 0px 0px 20px 174px
        
        }

    </style>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
</head>
<body>
    <h1>Jeu du Taquin</h1>
    <button id="shuffleButton">Mélanger les Images</button>
    <button id="restartButton" style="display:none;">Recommencer</button>
    <div id="puzzleContainer"></div>
    <p class="message" id="message"></p>
    <p class="winMessage" id="winMessage" style="display:none;"></p> <!-- Message de victoire -->
    <script>
        $(document).ready(function() {
            const puzzleContainer = $('#puzzleContainer');
            let pieces = [
                { id: 1, img: 'pirate/1.png' },
                { id: 2, img: 'pirate/2.png' },
                { id: 3, img: 'pirate/3.png' },
                { id: 4, img: 'pirate/4.png' },
                { id: 5, img: 'pirate/5.png' },
                { id: 6, img: 'pirate/6.png' },
                { id: 7, img: 'pirate/7.png' },
                { id: 8, img: 'pirate/8.png' },
                { id: 9, empty: true } // Case vide
            ];

            function initializePuzzle() {
                shufflePieces();
                renderPuzzle();
                makeDraggable();
                $('#message').text('');
                $('#winMessage').hide(); // Cacher le message de victoire
                $('#restartButton').hide();
            }

            function shufflePieces() {
                pieces = pieces.sort(() => Math.random() - 0.5);
            }

            function renderPuzzle() {
                puzzleContainer.empty();
                pieces.forEach(piece => {
                    const pieceElement = $('<div></div>')
                        .addClass('piece')
                        .css('background-image', piece.img ? `url(${piece.img})` : 'none')
                        .data('id', piece.id);
                    if (piece.empty) {
                        pieceElement.addClass('empty').css('background-image', 'none');
                    }
                    puzzleContainer.append(pieceElement);
                });
            }

            function makeDraggable() {
                $(".piece:not(.empty)").draggable({
                    revert: "invalid",
                    start: function() {
                        $(this).css("z-index", 100);
                    },
                    stop: function() {
                        $(this).css("z-index", "");
                    }
                });

                $(".piece.empty").droppable({
                    accept: ".piece",
                    drop: function(event, ui) {
                        const emptyPiece = $(this);
                        const draggedPiece = ui.draggable;

                        const emptyIndex = pieces.findIndex(piece => piece.empty);
                        const draggedIndex = pieces.findIndex(piece => piece.id === draggedPiece.data('id'));

                        // Swap the empty piece and the dragged piece
                        [pieces[emptyIndex], pieces[draggedIndex]] = [pieces[draggedIndex], pieces[emptyIndex]];

                        renderPuzzle();
                        makeDraggable();
                    }
                });
            }

    
        

            $('#shuffleButton').click(initializePuzzle);
            $('#restartButton').click(initializePuzzle);

            initializePuzzle();
        });
    </script>
</body>
</html>

__________________

L'image a été recadrée pour former un carré à partir de la partie inférieure, puis découpée
en 9 parties égales. Voici les liens pour télécharger chaque partie :


